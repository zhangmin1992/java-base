com.my.java.suanfa.ListNode.MyNode 定义的单链表节点

com.my.java.suanfa.ListNode.MergeTwoLists：
将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 
      示例：
      输入：1->2->4, 1->3->4
      输出：1->1->2->3->4->4

com.my.java.suanfa.ListNode.mergeKLists
K个已经升序的链表合并
  示例：
  输入：[[5>6>9],[1->2>3>4],[1->2>3>4]]
  输出：合并为1->1->2->2->3->3->4->4->5->6->9

com.my.java.suanfa.ListNode.findFromEnd
要求一次遍历链表找到链表的倒数第K个节点

com.my.java.suanfa.ListNode.middleNode
要求一次遍历链表，求链表中的中节点


com.my.java.suanfa.ListNode.FirstCommonNodeList
1、判断链表中是否有环
2、判断是否有环，有的话找到环的起始节点
3、求两个链表相交的节点

com.my.java.suanfa.ListNode.duizhe
链表对折
比如1->2->3->4->5->6->7 对折后为:1->7->2->6->3->5->4
1->2->3->4->5->6->7->8  对折后为:1->8->2->7->3->6->4->5
解题思路是找到链表的中节点，4，
 * 然后1->2->3->4当作一个新链表
 * 5->6->7 完全反转7->6>5 作为一个新链表
 * 然后着两个链表合并后为：1->7->2->6->3->5->4

com.my.java.suanfa.ListNode.KListNodeFanZhuan
K链表翻转。给出一个链表和一个数k， 比如链表1→2→3→4→5→6，k=2，翻转后2→1→4→3→6→5

